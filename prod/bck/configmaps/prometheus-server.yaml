apiVersion: v1
data:
  alerting_rules.yml: |
    groups:
    - name: kubernates
      rules:
      - alert: Deployment in failed state
        annotations:
          description: '{{ $labels.deployment }} Not all pods running'
          priority: P2
          summary: '{{$labels.namespace}}/{{ $labels.deployment }}'
        expr: kube_deployment_spec_replicas{job="kubernetes-service-endpoints"} - kube_deployment_status_replicas_available{job="kubernetes-service-endpoints"}
          > 1
        for: 10m
        labels:
          severity: critical
      - alert: Low Volume Space
        annotations:
          description: |-
            pool: {{ $labels.cloud_google_com_gke_nodepool }}
             region: {{ $labels.failure_domain_beta_kubernetes_io_region }}
             zone: {{ $labels.failure_domain_beta_kubernetes_io_zone }}
          summary: '{{$labels.persistentvolumeclaim}}: {{ $value }} %'
        expr: (kubelet_volume_stats_available_bytes/kubelet_volume_stats_capacity_bytes
          and kubelet_volume_stats_capacity_bytes) * 100 < 19
        for: 1m
        labels:
          severity: critical
      - alert: High CPU Usage
        annotations:
          summary: '{{ $value }} %'
        expr: sum (rate (container_cpu_usage_seconds_total{id="/"}[10m])) / sum (machine_cpu_cores)
          * 100 > 60
        for: 1m
        labels:
          severity: warning
      - alert: Low Free Memory
        annotations:
          description: |-
            pool: {{ $labels.cloud_google_com_gke_nodepool }}
             region: {{ $labels.failure_domain_beta_kubernetes_io_region }}
             zone: {{ $labels.failure_domain_beta_kubernetes_io_zone }}
          summary: '{{$labels.instance}}: {{ $value }} %'
        expr: ((container_spec_memory_limit_bytes{id="/"} - container_memory_working_set_bytes{id="/"})
          / container_spec_memory_limit_bytes{id="/"} * 100) < 10
        for: 1m
        labels:
          severity: critical
      - alert: Hight Network  Receive
        annotations:
          summary: '{{ $value }} MB/s'
        expr: (sum (rate (container_network_receive_bytes_total[10m])) / 1024 / 1024 >
          100)
        for: 10m
        labels:
          severity: warning
      - alert: Hight Network Transmit
        annotations:
          summary: '{{ $value }} MB/s'
        expr: (sum (rate (container_network_transmit_bytes_total[10m])) / 1024 / 1024
          > 100)
        for: 10m
        labels:
          severity: warning
      - alert: TooMany_OpenFileDescriptors
        annotations:
          description: '{{ $labels.job }}: {{ $labels.namespace }}/{{ $labels.pod }} ({{$labels.instance
            }}) is using {{ $value }}% of the available file/socket descriptors.'
          summary: Too many open file descriptors
        expr: 100 * (process_open_fds / process_max_fds) > 50
        for: 10m
        labels:
          severity: critical
      - alert: MONGO_DB__TO_MANY_OPEN_CONNECTIONS
        annotations:
          description: value is higher ({{ $value }}) than expected (100) during last
            2 minutes
        expr: mongodb_connections{state="current"} > 200
        for: 2m
        labels:
          severity: warning
      - alert: MONGO_DB__REPLICATION_LAG_BY_SET
        annotations:
          description: value is higher ({{ $value }}) than expected (60) during last 2
            minutes
          summary: Replication Lag by Set
        expr: max(mongodb_mongod_replset_member_optime_date{state="PRIMARY"}) by (set)
          - min(mongodb_mongod_replset_member_optime_date{state="SECONDARY"}) by (set)>
          60
        for: 2m
        labels:
          severity: warning
      - alert: MONGO_DB__UNEXPECTED_REPLICA_SET_STATE
        annotations:
          description: value ({{ $value }}) is not of of PRIMARY,SECONDARY,ARBITER
          summary: Unexpected ReplicaSet State
        expr: mongodb_mongod_replset_my_state!=1 and mongodb_mongod_replset_my_state!=2
          and mongodb_mongod_replset_my_state!=7
        for: 2m
        labels:
          severity: warning
      - alert: MONGO_DB__MIN_RUN_INSTANCES
        annotations:
          description: theare are only ({{ $value }}) instances
          summary: Some MongoDB instances are not reachable
        expr: count(mongodb_mongod_replset_member_health)<3
        for: 2m
        labels:
          severity: warning
      - alert: MGOB_DUMP_FAILED
        annotations:
          summary: Some MGOB dumps failed
        expr: (sum (rate (mgob_scheduler_backup_latency{status="500"}[10m]))  > 0)
        for: 5m
        labels:
          severity: warning
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-apiservers
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: default;kubernetes;https
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - job_name: kubernetes-service-endpoints-slow
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
      scrape_interval: 5m
      scrape_timeout: 30s
    - honor_labels: true
      job_name: prometheus-pushgateway
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      - action: keep
        regex: pushgateway
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
      - action: drop
        regex: Pending|Succeeded|Failed
        source_labels:
        - __meta_kubernetes_pod_phase
    - job_name: kubernetes-pods-slow
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
      - action: drop
        regex: Pending|Succeeded|Failed
        source_labels:
        - __meta_kubernetes_pod_phase
      scrape_interval: 5m
      scrape_timeout: 30s
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: prometheus
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_component]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
          regex: .*
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex: "9093"
          action: keep
  recording_rules.yml: |
    {}
  rules: |
    {}
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: prometheus
    meta.helm.sh/release-namespace: monitoring
  creationTimestamp: "2021-05-20T11:51:34Z"
  labels:
    app: prometheus
    app.kubernetes.io/managed-by: Helm
    chart: prometheus-14.0.0
    component: server
    heritage: Helm
    release: prometheus
  name: prometheus-server
  namespace: monitoring
  resourceVersion: "566100568"
  uid: bc363244-aa51-4ba5-bc73-472400bc68d0
