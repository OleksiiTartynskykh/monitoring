apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"certmanager.k8s.io/cluster-issuer":"letsencrypt","kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/auth-realm":"Authentication Required","nginx.ingress.kubernetes.io/auth-secret":"prometheus-auth","nginx.ingress.kubernetes.io/auth-type":"basic"},"name":"prometheus-ingress","namespace":"monitoring"},"spec":{"rules":[{"host":"prometheus.stage.bookful.inceptionxr.com","http":{"paths":[{"backend":{"serviceName":"prometheus-svc","servicePort":80},"path":"/"}]}}],"tls":[{"hosts":["prometheus.stage.bookful.inceptionxr.com"],"secretName":"prometheus-tls"}]}}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required
    nginx.ingress.kubernetes.io/auth-secret: prometheus-auth
    nginx.ingress.kubernetes.io/auth-type: basic
  creationTimestamp: "2019-12-13T18:39:23Z"
  generation: 1
  name: prometheus-ingress
  namespace: monitoring
  resourceVersion: "727158236"
  uid: e1f43f4f-1dd7-11ea-80f8-42010a800029
spec:
  rules:
  - host: prometheus.stage.bookful.inceptionxr.com
    http:
      paths:
      - backend:
          service:
            name: prometheus-svc
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - prometheus.stage.bookful.inceptionxr.com
    secretName: prometheus-tls
status:
  loadBalancer:
    ingress:
    - ip: 35.193.54.34
